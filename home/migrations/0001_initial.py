# Generated by Django 4.2.2 on 2023-07-01 10:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GraphicCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('g_cat_picture', models.ImageField(error_messages={'required': 'Load min 1 Graphic ...'}, upload_to='media', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'g_categories',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='LoadVideoForPageCreation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='media')),
            ],
        ),
        migrations.CreateModel(
            name='PictureCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('p_cat_picture', models.ImageField(error_messages={'required': 'Load min 1 Graphic ...'}, upload_to='media', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'p_categories',
                'ordering': ['-name'],
            },
        ),
        migrations.CreateModel(
            name='ProfileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='SearchPictures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UserCredentials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=15)),
                ('password', models.CharField(max_length=15)),
                ('email', models.EmailField(default='example@example.com', help_text='Enter your email address', max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserAddPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(error_messages={'required': 'Title is required'}, max_length=100)),
                ('picture', models.ImageField(error_messages={'required': 'Load min. 1 Picture ...'}, upload_to='media', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('price', models.DecimalField(decimal_places=2, error_messages={'required': 'Price in range 0 to 9999€ is required'}, help_text='Note: Price in EUR ...', max_digits=6, max_length=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999), django.core.validators.DecimalValidator(decimal_places=2, max_digits=6)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(default='Category', max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='picture', to='home.picturecategories')),
                ('tag_field', taggit.managers.TaggableManager(blank=True, help_text='Choose some tags that people can find your Picture ...', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'graphics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='GraphicUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(error_messages={'required': 'Title is required'}, max_length=100)),
                ('picture', models.ImageField(error_messages={'required': 'Load min 1 Graphic ...'}, upload_to='media', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])])),
                ('price', models.DecimalField(decimal_places=2, error_messages={'required': 'Price in range 0 to 9999€ is required'}, help_text='Note: Price in EUR ...', max_digits=6, max_length=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999), django.core.validators.DecimalValidator(decimal_places=2, max_digits=6)])),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(default='Category', max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='graphics', to='home.graphiccategory')),
                ('tag_field', taggit.managers.TaggableManager(help_text='Choose some tags that people can find your Graphic ...', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='g_user_name', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'graphics',
                'ordering': ['-date'],
            },
        ),
    ]
